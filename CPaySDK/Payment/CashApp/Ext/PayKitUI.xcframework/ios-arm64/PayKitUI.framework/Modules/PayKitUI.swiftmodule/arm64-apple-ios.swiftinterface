// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name PayKitUI
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import Combine
import DeveloperToolsSupport
import Foundation
@_exported import PayKitUI
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_hasMissingDesignatedInitializers @available(iOS 13.0, *)
@_Concurrency.MainActor @preconcurrency public class CashAppPayButton : UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency public var size: PayKitUI.SizingCategory {
    get
    set
  }
  @_Concurrency.MainActor @preconcurrency public var isEnabled: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor @preconcurrency public init(size: PayKitUI.SizingCategory = .large, onClickHandler: @escaping () -> Swift.Void)
  @objc deinit
}
@available(iOS 13.0, *)
@_Concurrency.MainActor @preconcurrency public struct CashAppPayButtonView : SwiftUICore.View {
  @SwiftUICore.ObservedObject @_projectedValueProperty($viewModel) @_Concurrency.MainActor @preconcurrency public var viewModel: PayKitUI.CashAppPayButtonView.ViewModel {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  @_Concurrency.MainActor @preconcurrency public var $viewModel: SwiftUICore.ObservedObject<PayKitUI.CashAppPayButtonView.ViewModel>.Wrapper {
    get
  }
  @_Concurrency.MainActor @preconcurrency public init(size: PayKitUI.SizingCategory = .large, isEnabled: Swift.Bool = true, onClickHandler: @escaping () -> Swift.Void)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  @available(iOS 13.0, *)
  public typealias Body = @_opaqueReturnTypeOf("$s8PayKitUI07CashAppA10ButtonViewV4bodyQrvp", 0) __
}
@available(iOS 13.0, *)
extension PayKitUI.CashAppPayButtonView {
  @_hasMissingDesignatedInitializers public class ViewModel : Foundation.ObservableObject {
    @available(iOS 13.0, *)
    public typealias ObjectWillChangePublisher = Combine.ObservableObjectPublisher
    @objc deinit
  }
}
@objc @_hasMissingDesignatedInitializers @available(iOS 13.0, *)
@_Concurrency.MainActor @preconcurrency public class CashAppPaymentMethod : UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency public var size: PayKitUI.SizingCategory {
    get
    set
  }
  @_Concurrency.MainActor @preconcurrency public var cashTag: Swift.String {
    get
    set
  }
  @_Concurrency.MainActor @preconcurrency public init(size: PayKitUI.SizingCategory = .large, cashTag: Swift.String = "")
  @_Concurrency.MainActor @preconcurrency public func setCashTagTextColor(_ color: UIKit.UIColor)
  @_Concurrency.MainActor @preconcurrency public func setCashTagFont(_ font: UIKit.UIFont)
  @objc deinit
}
@available(iOS 13.0, *)
@_Concurrency.MainActor @preconcurrency public struct CashAppPaymentMethodView : SwiftUICore.View {
  @SwiftUICore.ObservedObject @_projectedValueProperty($viewModel) @_Concurrency.MainActor @preconcurrency public var viewModel: PayKitUI.CashAppPaymentMethodView.ViewModel {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  @_Concurrency.MainActor @preconcurrency public var $viewModel: SwiftUICore.ObservedObject<PayKitUI.CashAppPaymentMethodView.ViewModel>.Wrapper {
    get
  }
  @_Concurrency.MainActor @preconcurrency public init(size: PayKitUI.SizingCategory = .large, cashTag: Swift.String, cashTagFont: SwiftUICore.Font = Constants.cashTagFont, cashTagTextColor: SwiftUICore.Color = Constants.cashTagTextColor)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public enum Constants {
    public static let cashTagFont: SwiftUICore.Font
    public static let cashTagTextColor: SwiftUICore.Color
  }
  @available(iOS 13.0, *)
  public typealias Body = @_opaqueReturnTypeOf("$s8PayKitUI24CashAppPaymentMethodViewV4bodyQrvp", 0) __
}
@available(iOS 13.0, *)
extension PayKitUI.CashAppPaymentMethodView {
  @_hasMissingDesignatedInitializers public class ViewModel : Foundation.ObservableObject {
    @available(iOS 13.0, *)
    public typealias ObjectWillChangePublisher = Combine.ObservableObjectPublisher
    @objc deinit
  }
}
public enum SizingCategory {
  case small
  case large
  public static func == (a: PayKitUI.SizingCategory, b: PayKitUI.SizingCategory) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 13.0, *)
extension PayKitUI.CashAppPayButtonView : Swift.Sendable {}
@available(iOS 13.0, *)
extension PayKitUI.CashAppPaymentMethodView : Swift.Sendable {}
extension PayKitUI.SizingCategory : Swift.Equatable {}
extension PayKitUI.SizingCategory : Swift.Hashable {}
